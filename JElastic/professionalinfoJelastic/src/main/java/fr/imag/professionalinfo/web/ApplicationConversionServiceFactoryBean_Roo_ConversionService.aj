// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package fr.imag.professionalinfo.web;

import fr.imag.professionalinfo.domain.Auteur;
import fr.imag.professionalinfo.domain.Brevet;
import fr.imag.professionalinfo.domain.Certification;
import fr.imag.professionalinfo.domain.Competence;
import fr.imag.professionalinfo.domain.CompteLie;
import fr.imag.professionalinfo.domain.CompteTwitter;
import fr.imag.professionalinfo.domain.Cours;
import fr.imag.professionalinfo.domain.Education;
import fr.imag.professionalinfo.domain.Entreprise;
import fr.imag.professionalinfo.domain.ExperienceVolontaire;
import fr.imag.professionalinfo.domain.FournisseurDuCompte;
import fr.imag.professionalinfo.domain.Inventeur;
import fr.imag.professionalinfo.domain.Langage;
import fr.imag.professionalinfo.domain.MessagerieInstantaneeLiee;
import fr.imag.professionalinfo.domain.Organisme;
import fr.imag.professionalinfo.domain.Personne;
import fr.imag.professionalinfo.domain.Position_;
import fr.imag.professionalinfo.domain.Publication;
import fr.imag.professionalinfo.domain.Recommandation;
import fr.imag.professionalinfo.domain.Secteur;
import fr.imag.professionalinfo.domain.Telephone;
import fr.imag.professionalinfo.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Auteur, String> ApplicationConversionServiceFactoryBean.getAuteurToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fr.imag.professionalinfo.domain.Auteur, java.lang.String>() {
            public String convert(Auteur auteur) {
                return new StringBuilder().append(auteur.getNom()).append(' ').append(auteur.getId2()).toString();
            }
        };
    }
    
    public Converter<Long, Auteur> ApplicationConversionServiceFactoryBean.getIdToAuteurConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fr.imag.professionalinfo.domain.Auteur>() {
            public fr.imag.professionalinfo.domain.Auteur convert(java.lang.Long id) {
                return Auteur.findAuteur(id);
            }
        };
    }
    
    public Converter<String, Auteur> ApplicationConversionServiceFactoryBean.getStringToAuteurConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fr.imag.professionalinfo.domain.Auteur>() {
            public fr.imag.professionalinfo.domain.Auteur convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Auteur.class);
            }
        };
    }
    
    public Converter<Brevet, String> ApplicationConversionServiceFactoryBean.getBrevetToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fr.imag.professionalinfo.domain.Brevet, java.lang.String>() {
            public String convert(Brevet brevet) {
                return new StringBuilder().append(brevet.getDateAttribution()).append(' ').append(brevet.getTitre()).append(' ').append(brevet.getNumero()).append(' ').append(brevet.getId2()).toString();
            }
        };
    }
    
    public Converter<Long, Brevet> ApplicationConversionServiceFactoryBean.getIdToBrevetConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fr.imag.professionalinfo.domain.Brevet>() {
            public fr.imag.professionalinfo.domain.Brevet convert(java.lang.Long id) {
                return Brevet.findBrevet(id);
            }
        };
    }
    
    public Converter<String, Brevet> ApplicationConversionServiceFactoryBean.getStringToBrevetConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fr.imag.professionalinfo.domain.Brevet>() {
            public fr.imag.professionalinfo.domain.Brevet convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Brevet.class);
            }
        };
    }
    
    public Converter<Certification, String> ApplicationConversionServiceFactoryBean.getCertificationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fr.imag.professionalinfo.domain.Certification, java.lang.String>() {
            public String convert(Certification certification) {
                return new StringBuilder().append(certification.getNumeroDeLicence()).append(' ').append(certification.getAutoriteDeCertification()).append(' ').append(certification.getId2()).append(' ').append(certification.getExpiration()).toString();
            }
        };
    }
    
    public Converter<Long, Certification> ApplicationConversionServiceFactoryBean.getIdToCertificationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fr.imag.professionalinfo.domain.Certification>() {
            public fr.imag.professionalinfo.domain.Certification convert(java.lang.Long id) {
                return Certification.findCertification(id);
            }
        };
    }
    
    public Converter<String, Certification> ApplicationConversionServiceFactoryBean.getStringToCertificationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fr.imag.professionalinfo.domain.Certification>() {
            public fr.imag.professionalinfo.domain.Certification convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Certification.class);
            }
        };
    }
    
    public Converter<Competence, String> ApplicationConversionServiceFactoryBean.getCompetenceToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fr.imag.professionalinfo.domain.Competence, java.lang.String>() {
            public String convert(Competence competence) {
                return new StringBuilder().append(competence.getNom()).append(' ').append(competence.getId2()).toString();
            }
        };
    }
    
    public Converter<Long, Competence> ApplicationConversionServiceFactoryBean.getIdToCompetenceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fr.imag.professionalinfo.domain.Competence>() {
            public fr.imag.professionalinfo.domain.Competence convert(java.lang.Long id) {
                return Competence.findCompetence(id);
            }
        };
    }
    
    public Converter<String, Competence> ApplicationConversionServiceFactoryBean.getStringToCompetenceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fr.imag.professionalinfo.domain.Competence>() {
            public fr.imag.professionalinfo.domain.Competence convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Competence.class);
            }
        };
    }
    
    public Converter<CompteLie, String> ApplicationConversionServiceFactoryBean.getCompteLieToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fr.imag.professionalinfo.domain.CompteLie, java.lang.String>() {
            public String convert(CompteLie compteLie) {
                return new StringBuilder().append(compteLie.getType()).append(' ').append(compteLie.getProperty1()).append(' ').append(compteLie.getEstPrimaire()).append(' ').append(compteLie.getBindingStatus()).toString();
            }
        };
    }
    
    public Converter<Long, CompteLie> ApplicationConversionServiceFactoryBean.getIdToCompteLieConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fr.imag.professionalinfo.domain.CompteLie>() {
            public fr.imag.professionalinfo.domain.CompteLie convert(java.lang.Long id) {
                return CompteLie.findCompteLie(id);
            }
        };
    }
    
    public Converter<String, CompteLie> ApplicationConversionServiceFactoryBean.getStringToCompteLieConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fr.imag.professionalinfo.domain.CompteLie>() {
            public fr.imag.professionalinfo.domain.CompteLie convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), CompteLie.class);
            }
        };
    }
    
    public Converter<CompteTwitter, String> ApplicationConversionServiceFactoryBean.getCompteTwitterToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fr.imag.professionalinfo.domain.CompteTwitter, java.lang.String>() {
            public String convert(CompteTwitter compteTwitter) {
                return new StringBuilder().append(compteTwitter.getId2()).append(' ').append(compteTwitter.getEstPrimaire()).toString();
            }
        };
    }
    
    public Converter<Long, CompteTwitter> ApplicationConversionServiceFactoryBean.getIdToCompteTwitterConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fr.imag.professionalinfo.domain.CompteTwitter>() {
            public fr.imag.professionalinfo.domain.CompteTwitter convert(java.lang.Long id) {
                return CompteTwitter.findCompteTwitter(id);
            }
        };
    }
    
    public Converter<String, CompteTwitter> ApplicationConversionServiceFactoryBean.getStringToCompteTwitterConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fr.imag.professionalinfo.domain.CompteTwitter>() {
            public fr.imag.professionalinfo.domain.CompteTwitter convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), CompteTwitter.class);
            }
        };
    }
    
    public Converter<Cours, String> ApplicationConversionServiceFactoryBean.getCoursToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fr.imag.professionalinfo.domain.Cours, java.lang.String>() {
            public String convert(Cours cours) {
                return new StringBuilder().append(cours.getNombre()).append(' ').append(cours.getNom()).append(' ').append(cours.getId2()).toString();
            }
        };
    }
    
    public Converter<Long, Cours> ApplicationConversionServiceFactoryBean.getIdToCoursConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fr.imag.professionalinfo.domain.Cours>() {
            public fr.imag.professionalinfo.domain.Cours convert(java.lang.Long id) {
                return Cours.findCours(id);
            }
        };
    }
    
    public Converter<String, Cours> ApplicationConversionServiceFactoryBean.getStringToCoursConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fr.imag.professionalinfo.domain.Cours>() {
            public fr.imag.professionalinfo.domain.Cours convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Cours.class);
            }
        };
    }
    
    public Converter<Education, String> ApplicationConversionServiceFactoryBean.getEducationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fr.imag.professionalinfo.domain.Education, java.lang.String>() {
            public String convert(Education education) {
                return new StringBuilder().append(education.getAutresDetails()).append(' ').append(education.getDateDebut()).append(' ').append(education.getDiplome()).append(' ').append(education.getSecteur()).toString();
            }
        };
    }
    
    public Converter<Long, Education> ApplicationConversionServiceFactoryBean.getIdToEducationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fr.imag.professionalinfo.domain.Education>() {
            public fr.imag.professionalinfo.domain.Education convert(java.lang.Long id) {
                return Education.findEducation(id);
            }
        };
    }
    
    public Converter<String, Education> ApplicationConversionServiceFactoryBean.getStringToEducationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fr.imag.professionalinfo.domain.Education>() {
            public fr.imag.professionalinfo.domain.Education convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Education.class);
            }
        };
    }
    
    public Converter<Entreprise, String> ApplicationConversionServiceFactoryBean.getEntrepriseToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fr.imag.professionalinfo.domain.Entreprise, java.lang.String>() {
            public String convert(Entreprise entreprise) {
                return new StringBuilder().append(entreprise.getType()).append(' ').append(entreprise.getSecteur()).append(' ').append(entreprise.getNomBourse()).append(' ').append(entreprise.getId2()).toString();
            }
        };
    }
    
    public Converter<Long, Entreprise> ApplicationConversionServiceFactoryBean.getIdToEntrepriseConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fr.imag.professionalinfo.domain.Entreprise>() {
            public fr.imag.professionalinfo.domain.Entreprise convert(java.lang.Long id) {
                return Entreprise.findEntreprise(id);
            }
        };
    }
    
    public Converter<String, Entreprise> ApplicationConversionServiceFactoryBean.getStringToEntrepriseConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fr.imag.professionalinfo.domain.Entreprise>() {
            public fr.imag.professionalinfo.domain.Entreprise convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Entreprise.class);
            }
        };
    }
    
    public Converter<ExperienceVolontaire, String> ApplicationConversionServiceFactoryBean.getExperienceVolontaireToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fr.imag.professionalinfo.domain.ExperienceVolontaire, java.lang.String>() {
            public String convert(ExperienceVolontaire experienceVolontaire) {
                return new StringBuilder().append(experienceVolontaire.getOrganisation()).append(' ').append(experienceVolontaire.getCause()).append(' ').append(experienceVolontaire.getId2()).append(' ').append(experienceVolontaire.getFonction()).toString();
            }
        };
    }
    
    public Converter<Long, ExperienceVolontaire> ApplicationConversionServiceFactoryBean.getIdToExperienceVolontaireConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fr.imag.professionalinfo.domain.ExperienceVolontaire>() {
            public fr.imag.professionalinfo.domain.ExperienceVolontaire convert(java.lang.Long id) {
                return ExperienceVolontaire.findExperienceVolontaire(id);
            }
        };
    }
    
    public Converter<String, ExperienceVolontaire> ApplicationConversionServiceFactoryBean.getStringToExperienceVolontaireConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fr.imag.professionalinfo.domain.ExperienceVolontaire>() {
            public fr.imag.professionalinfo.domain.ExperienceVolontaire convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ExperienceVolontaire.class);
            }
        };
    }
    
    public Converter<FournisseurDuCompte, String> ApplicationConversionServiceFactoryBean.getFournisseurDuCompteToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fr.imag.professionalinfo.domain.FournisseurDuCompte, java.lang.String>() {
            public String convert(FournisseurDuCompte fournisseurDuCompte) {
                return new StringBuilder().append(fournisseurDuCompte.getNom()).append(' ').append(fournisseurDuCompte.getId2()).toString();
            }
        };
    }
    
    public Converter<Long, FournisseurDuCompte> ApplicationConversionServiceFactoryBean.getIdToFournisseurDuCompteConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fr.imag.professionalinfo.domain.FournisseurDuCompte>() {
            public fr.imag.professionalinfo.domain.FournisseurDuCompte convert(java.lang.Long id) {
                return FournisseurDuCompte.findFournisseurDuCompte(id);
            }
        };
    }
    
    public Converter<String, FournisseurDuCompte> ApplicationConversionServiceFactoryBean.getStringToFournisseurDuCompteConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fr.imag.professionalinfo.domain.FournisseurDuCompte>() {
            public fr.imag.professionalinfo.domain.FournisseurDuCompte convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), FournisseurDuCompte.class);
            }
        };
    }
    
    public Converter<Inventeur, String> ApplicationConversionServiceFactoryBean.getInventeurToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fr.imag.professionalinfo.domain.Inventeur, java.lang.String>() {
            public String convert(Inventeur inventeur) {
                return new StringBuilder().append(inventeur.getId2()).append(' ').append(inventeur.getNom()).toString();
            }
        };
    }
    
    public Converter<Long, Inventeur> ApplicationConversionServiceFactoryBean.getIdToInventeurConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fr.imag.professionalinfo.domain.Inventeur>() {
            public fr.imag.professionalinfo.domain.Inventeur convert(java.lang.Long id) {
                return Inventeur.findInventeur(id);
            }
        };
    }
    
    public Converter<String, Inventeur> ApplicationConversionServiceFactoryBean.getStringToInventeurConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fr.imag.professionalinfo.domain.Inventeur>() {
            public fr.imag.professionalinfo.domain.Inventeur convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Inventeur.class);
            }
        };
    }
    
    public Converter<Langage, String> ApplicationConversionServiceFactoryBean.getLangageToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fr.imag.professionalinfo.domain.Langage, java.lang.String>() {
            public String convert(Langage langage) {
                return new StringBuilder().append(langage.getNom()).append(' ').append(langage.getId2()).append(' ').append(langage.getNiveau()).toString();
            }
        };
    }
    
    public Converter<Long, Langage> ApplicationConversionServiceFactoryBean.getIdToLangageConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fr.imag.professionalinfo.domain.Langage>() {
            public fr.imag.professionalinfo.domain.Langage convert(java.lang.Long id) {
                return Langage.findLangage(id);
            }
        };
    }
    
    public Converter<String, Langage> ApplicationConversionServiceFactoryBean.getStringToLangageConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fr.imag.professionalinfo.domain.Langage>() {
            public fr.imag.professionalinfo.domain.Langage convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Langage.class);
            }
        };
    }
    
    public Converter<MessagerieInstantaneeLiee, String> ApplicationConversionServiceFactoryBean.getMessagerieInstantaneeLieeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fr.imag.professionalinfo.domain.MessagerieInstantaneeLiee, java.lang.String>() {
            public String convert(MessagerieInstantaneeLiee messagerieInstantaneeLiee) {
                return new StringBuilder().append(messagerieInstantaneeLiee.getType()).append(' ').append(messagerieInstantaneeLiee.getId2()).toString();
            }
        };
    }
    
    public Converter<Long, MessagerieInstantaneeLiee> ApplicationConversionServiceFactoryBean.getIdToMessagerieInstantaneeLieeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fr.imag.professionalinfo.domain.MessagerieInstantaneeLiee>() {
            public fr.imag.professionalinfo.domain.MessagerieInstantaneeLiee convert(java.lang.Long id) {
                return MessagerieInstantaneeLiee.findMessagerieInstantaneeLiee(id);
            }
        };
    }
    
    public Converter<String, MessagerieInstantaneeLiee> ApplicationConversionServiceFactoryBean.getStringToMessagerieInstantaneeLieeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fr.imag.professionalinfo.domain.MessagerieInstantaneeLiee>() {
            public fr.imag.professionalinfo.domain.MessagerieInstantaneeLiee convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), MessagerieInstantaneeLiee.class);
            }
        };
    }
    
    public Converter<Organisme, String> ApplicationConversionServiceFactoryBean.getOrganismeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fr.imag.professionalinfo.domain.Organisme, java.lang.String>() {
            public String convert(Organisme organisme) {
                return new StringBuilder().append(organisme.getNom()).append(' ').append(organisme.getCode()).toString();
            }
        };
    }
    
    public Converter<Long, Organisme> ApplicationConversionServiceFactoryBean.getIdToOrganismeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fr.imag.professionalinfo.domain.Organisme>() {
            public fr.imag.professionalinfo.domain.Organisme convert(java.lang.Long id) {
                return Organisme.findOrganisme(id);
            }
        };
    }
    
    public Converter<String, Organisme> ApplicationConversionServiceFactoryBean.getStringToOrganismeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fr.imag.professionalinfo.domain.Organisme>() {
            public fr.imag.professionalinfo.domain.Organisme convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Organisme.class);
            }
        };
    }
    
    public Converter<Personne, String> ApplicationConversionServiceFactoryBean.getPersonneToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fr.imag.professionalinfo.domain.Personne, java.lang.String>() {
            public String convert(Personne personne) {
                return new StringBuilder().append(personne.getRecompensesDonnees()).append(' ').append(personne.getLieu()).append(' ').append(personne.getProperty1()).append(' ').append(personne.getNombreTotalPositionsCourantes()).toString();
            }
        };
    }
    
    public Converter<Long, Personne> ApplicationConversionServiceFactoryBean.getIdToPersonneConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fr.imag.professionalinfo.domain.Personne>() {
            public fr.imag.professionalinfo.domain.Personne convert(java.lang.Long id) {
                return Personne.findPersonne(id);
            }
        };
    }
    
    public Converter<String, Personne> ApplicationConversionServiceFactoryBean.getStringToPersonneConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fr.imag.professionalinfo.domain.Personne>() {
            public fr.imag.professionalinfo.domain.Personne convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Personne.class);
            }
        };
    }
    
    public Converter<Position_, String> ApplicationConversionServiceFactoryBean.getPosition_ToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fr.imag.professionalinfo.domain.Position_, java.lang.String>() {
            public String convert(Position_ position_) {
                return new StringBuilder().append(position_.getResume()).append(' ').append(position_.getDateFin()).append(' ').append(position_.getPositionActuelle()).append(' ').append(position_.getDateDebut()).toString();
            }
        };
    }
    
    public Converter<Long, Position_> ApplicationConversionServiceFactoryBean.getIdToPosition_Converter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fr.imag.professionalinfo.domain.Position_>() {
            public fr.imag.professionalinfo.domain.Position_ convert(java.lang.Long id) {
                return Position_.findPosition_(id);
            }
        };
    }
    
    public Converter<String, Position_> ApplicationConversionServiceFactoryBean.getStringToPosition_Converter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fr.imag.professionalinfo.domain.Position_>() {
            public fr.imag.professionalinfo.domain.Position_ convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Position_.class);
            }
        };
    }
    
    public Converter<Publication, String> ApplicationConversionServiceFactoryBean.getPublicationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fr.imag.professionalinfo.domain.Publication, java.lang.String>() {
            public String convert(Publication publication) {
                return new StringBuilder().append(publication.getDatePublication()).append(' ').append(publication.getTitre()).append(' ').append(publication.getResume()).append(' ').append(publication.getEditeur()).toString();
            }
        };
    }
    
    public Converter<Long, Publication> ApplicationConversionServiceFactoryBean.getIdToPublicationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fr.imag.professionalinfo.domain.Publication>() {
            public fr.imag.professionalinfo.domain.Publication convert(java.lang.Long id) {
                return Publication.findPublication(id);
            }
        };
    }
    
    public Converter<String, Publication> ApplicationConversionServiceFactoryBean.getStringToPublicationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fr.imag.professionalinfo.domain.Publication>() {
            public fr.imag.professionalinfo.domain.Publication convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Publication.class);
            }
        };
    }
    
    public Converter<Recommandation, String> ApplicationConversionServiceFactoryBean.getRecommandationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fr.imag.professionalinfo.domain.Recommandation, java.lang.String>() {
            public String convert(Recommandation recommandation) {
                return new StringBuilder().append(recommandation.getType()).append(' ').append(recommandation.getId2()).append(' ').append(recommandation.getRecommandationRecue()).toString();
            }
        };
    }
    
    public Converter<Long, Recommandation> ApplicationConversionServiceFactoryBean.getIdToRecommandationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fr.imag.professionalinfo.domain.Recommandation>() {
            public fr.imag.professionalinfo.domain.Recommandation convert(java.lang.Long id) {
                return Recommandation.findRecommandation(id);
            }
        };
    }
    
    public Converter<String, Recommandation> ApplicationConversionServiceFactoryBean.getStringToRecommandationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fr.imag.professionalinfo.domain.Recommandation>() {
            public fr.imag.professionalinfo.domain.Recommandation convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Recommandation.class);
            }
        };
    }
    
    public Converter<Secteur, String> ApplicationConversionServiceFactoryBean.getSecteurToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fr.imag.professionalinfo.domain.Secteur, java.lang.String>() {
            public String convert(Secteur secteur) {
                return new StringBuilder().append(secteur.getId2()).append(' ').append(secteur.getNom()).toString();
            }
        };
    }
    
    public Converter<Long, Secteur> ApplicationConversionServiceFactoryBean.getIdToSecteurConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fr.imag.professionalinfo.domain.Secteur>() {
            public fr.imag.professionalinfo.domain.Secteur convert(java.lang.Long id) {
                return Secteur.findSecteur(id);
            }
        };
    }
    
    public Converter<String, Secteur> ApplicationConversionServiceFactoryBean.getStringToSecteurConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fr.imag.professionalinfo.domain.Secteur>() {
            public fr.imag.professionalinfo.domain.Secteur convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Secteur.class);
            }
        };
    }
    
    public Converter<Telephone, String> ApplicationConversionServiceFactoryBean.getTelephoneToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fr.imag.professionalinfo.domain.Telephone, java.lang.String>() {
            public String convert(Telephone telephone) {
                return new StringBuilder().append(telephone.getType()).append(' ').append(telephone.getNumero()).toString();
            }
        };
    }
    
    public Converter<Long, Telephone> ApplicationConversionServiceFactoryBean.getIdToTelephoneConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fr.imag.professionalinfo.domain.Telephone>() {
            public fr.imag.professionalinfo.domain.Telephone convert(java.lang.Long id) {
                return Telephone.findTelephone(id);
            }
        };
    }
    
    public Converter<String, Telephone> ApplicationConversionServiceFactoryBean.getStringToTelephoneConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fr.imag.professionalinfo.domain.Telephone>() {
            public fr.imag.professionalinfo.domain.Telephone convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Telephone.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAuteurToStringConverter());
        registry.addConverter(getIdToAuteurConverter());
        registry.addConverter(getStringToAuteurConverter());
        registry.addConverter(getBrevetToStringConverter());
        registry.addConverter(getIdToBrevetConverter());
        registry.addConverter(getStringToBrevetConverter());
        registry.addConverter(getCertificationToStringConverter());
        registry.addConverter(getIdToCertificationConverter());
        registry.addConverter(getStringToCertificationConverter());
        registry.addConverter(getCompetenceToStringConverter());
        registry.addConverter(getIdToCompetenceConverter());
        registry.addConverter(getStringToCompetenceConverter());
        registry.addConverter(getCompteLieToStringConverter());
        registry.addConverter(getIdToCompteLieConverter());
        registry.addConverter(getStringToCompteLieConverter());
        registry.addConverter(getCompteTwitterToStringConverter());
        registry.addConverter(getIdToCompteTwitterConverter());
        registry.addConverter(getStringToCompteTwitterConverter());
        registry.addConverter(getCoursToStringConverter());
        registry.addConverter(getIdToCoursConverter());
        registry.addConverter(getStringToCoursConverter());
        registry.addConverter(getEducationToStringConverter());
        registry.addConverter(getIdToEducationConverter());
        registry.addConverter(getStringToEducationConverter());
        registry.addConverter(getEntrepriseToStringConverter());
        registry.addConverter(getIdToEntrepriseConverter());
        registry.addConverter(getStringToEntrepriseConverter());
        registry.addConverter(getExperienceVolontaireToStringConverter());
        registry.addConverter(getIdToExperienceVolontaireConverter());
        registry.addConverter(getStringToExperienceVolontaireConverter());
        registry.addConverter(getFournisseurDuCompteToStringConverter());
        registry.addConverter(getIdToFournisseurDuCompteConverter());
        registry.addConverter(getStringToFournisseurDuCompteConverter());
        registry.addConverter(getInventeurToStringConverter());
        registry.addConverter(getIdToInventeurConverter());
        registry.addConverter(getStringToInventeurConverter());
        registry.addConverter(getLangageToStringConverter());
        registry.addConverter(getIdToLangageConverter());
        registry.addConverter(getStringToLangageConverter());
        registry.addConverter(getMessagerieInstantaneeLieeToStringConverter());
        registry.addConverter(getIdToMessagerieInstantaneeLieeConverter());
        registry.addConverter(getStringToMessagerieInstantaneeLieeConverter());
        registry.addConverter(getOrganismeToStringConverter());
        registry.addConverter(getIdToOrganismeConverter());
        registry.addConverter(getStringToOrganismeConverter());
        registry.addConverter(getPersonneToStringConverter());
        registry.addConverter(getIdToPersonneConverter());
        registry.addConverter(getStringToPersonneConverter());
        registry.addConverter(getPosition_ToStringConverter());
        registry.addConverter(getIdToPosition_Converter());
        registry.addConverter(getStringToPosition_Converter());
        registry.addConverter(getPublicationToStringConverter());
        registry.addConverter(getIdToPublicationConverter());
        registry.addConverter(getStringToPublicationConverter());
        registry.addConverter(getRecommandationToStringConverter());
        registry.addConverter(getIdToRecommandationConverter());
        registry.addConverter(getStringToRecommandationConverter());
        registry.addConverter(getSecteurToStringConverter());
        registry.addConverter(getIdToSecteurConverter());
        registry.addConverter(getStringToSecteurConverter());
        registry.addConverter(getTelephoneToStringConverter());
        registry.addConverter(getIdToTelephoneConverter());
        registry.addConverter(getStringToTelephoneConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
